<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp"
        xmlns:ui="clr-namespace:WpfApp.Ui"
        ShowInTaskbar="False" WindowStyle="None" ResizeMode="NoResize"
        Background="Transparent" AllowsTransparency="True"
        mc:Ignorable="d"
        Title="MainWindow" Height="248" Width="600">
    <Window.Resources>
        <BitmapImage x:Key="Res_BtnMinClose" UriSource="pack://application:,,,/../Resource/minclose.png"/>
        <BitmapImage x:Key="Res_BtnMinCloseHover" UriSource="pack://application:,,,/../Resource/minclosehover.png"/>

        <!--控件模板-->
        <ControlTemplate x:Key="defaultButtonTemplate" TargetType="Button">
            <Border Background="Red" CornerRadius="10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                    <TextBlock Text="add" VerticalAlignment="Center"/>
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid Background="LightBlue">
        <StackPanel Margin="16,16,16,16">
            <Grid>
                <TextBlock Text= "欢迎来到WPF世界" FontSize="18" Foreground="#FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <ui:IconButton Height="12" Width="12" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding CloseCommand}"
                               Icon="{StaticResource Res_BtnMinClose}" HoverIcon="{StaticResource Res_BtnMinCloseHover}" PushIcon="{StaticResource Res_BtnMinCloseHover}"/>
            </Grid>
            <Grid Margin="0,20,0,0">
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="box1" Grid.Row="0" Height="30" Margin="4" Padding="3,5" FontSize="14" InputMethod.IsInputMethodEnabled="False"
                         PreviewTextInput="propNumber_PreviewTextInput" Text="{Binding Input1}"/>
                    <TextBox x:Name="box2" Grid.Row="1" Height="30" Margin="4" Padding="3,5" FontSize="14" InputMethod.IsInputMethodEnabled="False"
                         PreviewTextInput="propNumber_PreviewTextInput" Text="{Binding Input2}"/>
                    <TextBox x:Name="box3" Grid.Row="2" Height="30" Margin="4" Padding="3,5" FontSize="14" InputMethod.IsInputMethodEnabled="False"
                         PreviewTextInput="propNumber_PreviewTextInput" Text="{Binding Result}"/>
                    <Button Style="{DynamicResource ButtonStyle1}" x:Name="addButtoon" Grid.Row="3" Margin="10" Width="100" Height="40"
                           
                            Content="add" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Command="{Binding AddCommand}"/>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
